{"version":3,"file":"static/js/255.e35449a6.chunk.js","mappings":"uMAGe,SAASA,EAAGC,GAAkB,IAAfC,EAAMD,EAANC,OAAOC,EAAGF,EAAHE,IACjC,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAC,OAAKH,GAAMI,UAEjBC,EAAAA,EAAAA,GAAI,IAAIC,MAAMP,EAAOQ,KAAKC,OAAOC,KAAI,SAACC,EAAOC,GACzC,OAAOZ,EAAOK,SAASK,KAAI,SAACG,GAAO,OAAOX,EAAAA,EAAAA,KAACY,EAAM,CAACd,OAAQa,GAAI,GAClE,KAIhB,CAEA,IAAMC,EAAS,SAATA,EAAMC,GAAgB,IAAXf,EAAMe,EAANf,OACb,OAAOgB,EAAAA,cACHhB,EAAOiB,QAAQC,KACf,CACEf,UAAU,GAADC,OAAKJ,EAAOC,KACrBkB,IAAKnB,EAAOQ,MAAQR,EAAOQ,KAAKW,KAAOnB,EAAOQ,KAAKW,KAErDnB,EAAOK,SACLL,EAAOK,SAASK,KAAI,SAACG,GAAC,OAAKX,EAAAA,EAAAA,KAACY,EAAM,CAACd,OAAQa,GAAI,IAAIb,EAAOQ,MAAQR,EAAOQ,KAAKG,MAExF,C","sources":["Map.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { UserContext } from './context/Context';\n\nexport default function Map({ config,css }) {\n    return (\n        <div className={`${css}`}>\n            {\n                [...new Array(config.data.loop)].map((value, i) => {\n                    return config.children.map((c) => {return <Method config={c}/>}) \n                })\n            }\n        </div>\n    )\n}\n\nconst Method = ({config})=>{\n    return React.createElement(\n        config.element.type,\n        {\n          className: `${config.css}`,\n          src: config.data && config.data.src && config.data.src\n        },\n        config.children ?\n          config.children.map((c) => <Method config={c}/>) : config.data && config.data.value\n      );\n}\n\n\n// import React, { useContext, useEffect, useState } from 'react'\n// import { useNavigate } from 'react-router-dom';\n// import { UserContext } from './context/Context';\n\n// let data;\n// export default function Map({ config }) {\n// const [data, setData] = useState([])\n// const contextData = useContext(UserContext)\n// console.log(contextData, \"context data\")\n// const navigate = useNavigate()\n//     const func = (config)=>{\n//          data += React.createElement(\n//             config.component,\n//             {\n//                 src: config.src,\n//                 style: config.style,\n//                 id: config.id,\n//                 className: config.class,\n//                 contentEditable: config.contenteditable,\n//                 suppressContentEditableWarning: true, // to suppress contentEditable warning\n//                 htmlFor: config.htmlFor,\n//                 placeholder: config.placeholder,\n//                 type: config.type,\n//                 //   onClick: config.href == null ? function (e) { handle(e) } : (e) => { handleInputChange(e, config.href) },\n//             },\n//             config.children &&\n//             (typeof config.children === \"string\"\n//               ? config.children\n//               : config.children.map((c) => func(c)))\n//         )\n//     }\n//     const fetch2 = ()=>{\n//         fetch(`http://localhost:1337/api/${config.logic}`)\n//         .then((response)=> response.json())\n//         .then(data => setData([...data.data]))\n//         .catch(err => console.log(err))\n//     }\n//     useEffect(()=>{\n//          fetch2()\n//     },[])\n//     return (\n//         <div className='flex overflow-auto items-center'>\n//             {\n//                 [...new Array(6)].map((value, i) => {\n//                     return React.createElement(\n//                         config.component,\n//                         {\n//                             src: config.src,\n//                             style: config.style,\n//                             id: config.id,\n//                             className: config.class,\n//                             contentEditable: config.contenteditable,\n//                             suppressContentEditableWarning: true, // to suppress contentEditable warning\n//                             htmlFor: config.htmlFor,\n//                             placeholder: config.placeholder,\n//                             type: config.type,\n//                             onClick: ()=>{navigate(`product/${i}`)},\n//                         },\n//                         config.children &&\n//                         (typeof config.children === \"string\"\n//                           ? config.children\n//                           : config.children.map((c) => <Method config={c} data={value}/>))\n//                     )\n//                 })\n//             }\n//         </div>\n//     )\n// }\n\n// const Method = ({config, data})=>{\n    \n//     const contextData = useContext(UserContext)\n//     return React.createElement(\n//         config.component,\n//         {\n//             src: config.src,\n//             style: config.style,\n//             id: config.id,\n//             className: config.class,\n//             contentEditable: config.contenteditable,\n//             suppressContentEditableWarning: true, // to suppress contentEditable warning\n//             htmlFor: config.htmlFor,\n//             placeholder: config.placeholder,\n//             type: config.type,\n//             //   onClick: config.href == null ? function (e) { handle(e) } : (e) => { handleInputChange(e, config.href) },\n//         },\n//         config.contextData && contextData[config.contextData],\n//         data.attributes.firstname\n//         // config.children &&\n//         // (typeof config.children === \"string\"\n//         //   ? config.children\n//         //   : config.children.map((c) => <Method config={c}/>))\n//     )\n// }\n"],"names":["Map","_ref","config","css","_jsx","className","concat","children","_toConsumableArray","Array","data","loop","map","value","i","c","Method","_ref2","React","element","type","src"],"sourceRoot":""}